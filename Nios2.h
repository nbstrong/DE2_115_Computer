#ifndef _ALTERA_NIOS2_H_
#define _ALTERA_NIOS2_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'Computer_System' in
 * file './Computer_System.sopcinfo'.
 */

/*
 * This file contains macros for module 'Nios2' and devices
 * connected to the following masters:
 *   data_master
 *   instruction_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for module 'Nios2', class 'altera_nios2_gen2'.
 * The macros have no prefix.
 */
#define BIG_ENDIAN 0
#define BREAK_ADDR 0xa000020
#define CPU_ARCH_NIOS2_R1 
#define CPU_FREQ 50000000
#define CPU_ID_SIZE 1
#define CPU_ID_VALUE 0x00000000
#define CPU_IMPLEMENTATION "fast"
#define DATA_ADDR_WIDTH 32
#define DCACHE_LINE_SIZE 0
#define DCACHE_LINE_SIZE_LOG2 0
#define DCACHE_SIZE 0
#define EXCEPTION_ADDR 0x20
#define FLASH_ACCELERATOR_LINES 0
#define FLASH_ACCELERATOR_LINE_SIZE 0
#define FLUSHDA_SUPPORTED 
#define HARDWARE_DIVIDE_PRESENT 1
#define HARDWARE_MULTIPLY_PRESENT 1
#define HARDWARE_MULX_PRESENT 1
#define HAS_DEBUG_CORE 1
#define HAS_DEBUG_STUB 
#define HAS_DIVISION_ERROR_EXCEPTION 
#define HAS_EXTRA_EXCEPTION_INFO 
#define HAS_ILLEGAL_INSTRUCTION_EXCEPTION 
#define HAS_JMPI_INSTRUCTION 
#define ICACHE_LINE_SIZE 32
#define ICACHE_LINE_SIZE_LOG2 5
#define ICACHE_SIZE 4096
#define INST_ADDR_WIDTH 28
#define NUM_OF_SHADOW_REG_SETS 0
#define OCI_VERSION 1
#define RESET_ADDR 0x0

/*
 * Macros for device 'SDRAM', class 'altera_avalon_new_sdram_controller'
 * The macros are prefixed with 'SDRAM_'.
 * The prefix is the slave descriptor.
 */
#define SDRAM_COMPONENT_TYPE altera_avalon_new_sdram_controller
#define SDRAM_COMPONENT_NAME SDRAM
#define SDRAM_BASE 0x0
#define SDRAM_SPAN 134217728
#define SDRAM_END 0x7ffffff
#define SDRAM_CAS_LATENCY 3
#define SDRAM_CONTENTS_INFO 
#define SDRAM_INIT_NOP_DELAY 0.0
#define SDRAM_INIT_REFRESH_COMMANDS 2
#define SDRAM_IS_INITIALIZED 1
#define SDRAM_POWERUP_DELAY 100.0
#define SDRAM_REFRESH_PERIOD 15.625
#define SDRAM_REGISTER_DATA_IN 1
#define SDRAM_SDRAM_ADDR_WIDTH 25
#define SDRAM_SDRAM_BANK_WIDTH 2
#define SDRAM_SDRAM_COL_WIDTH 10
#define SDRAM_SDRAM_DATA_WIDTH 32
#define SDRAM_SDRAM_NUM_BANKS 4
#define SDRAM_SDRAM_NUM_CHIPSELECTS 1
#define SDRAM_SDRAM_ROW_WIDTH 13
#define SDRAM_SHARED_DATA 0
#define SDRAM_SIM_MODEL_BASE 1
#define SDRAM_STARVATION_INDICATOR 0
#define SDRAM_TRISTATE_BRIDGE_SLAVE ""
#define SDRAM_T_AC 5.5
#define SDRAM_T_MRD 3
#define SDRAM_T_RCD 20.0
#define SDRAM_T_RFC 70.0
#define SDRAM_T_RP 20.0
#define SDRAM_T_WR 14.0
#define SDRAM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32

/*
 * Macros for device 'SRAM', class 'altera_up_avalon_sram'
 * The macros are prefixed with 'SRAM_'.
 * The prefix is the slave descriptor.
 */
#define SRAM_COMPONENT_TYPE altera_up_avalon_sram
#define SRAM_COMPONENT_NAME SRAM
#define SRAM_BASE 0x8000000
#define SRAM_SPAN 2097152
#define SRAM_END 0x81fffff

/*
 * Macros for device 'VGA_Subsystem_VGA_Pixel_RGB_Resampler', class 'altera_up_avalon_video_rgb_resampler'
 * The macros are prefixed with 'VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER_'.
 * The prefix is the slave descriptor.
 */
#define VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER_COMPONENT_TYPE altera_up_avalon_video_rgb_resampler
#define VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER_COMPONENT_NAME VGA_Subsystem_VGA_Pixel_RGB_Resampler
#define VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER_BASE 0x8200000
#define VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER_SPAN 4
#define VGA_SUBSYSTEM_VGA_PIXEL_RGB_RESAMPLER_END 0x8200003

/*
 * Macros for device 'VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_'.
 * The prefix is the slave descriptor.
 */
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_COMPONENT_NAME VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_BASE 0x9000000
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_SPAN 8192
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_END 0x9001fff
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_CONTENTS_INFO ""
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_DUAL_PORT 1
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_GUI_RAM_BLOCK_TYPE AUTO
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_INIT_CONTENTS_FILE Computer_System_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_INIT_MEM_CONTENT 1
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_INSTANCE_ID NONE
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_NON_DEFAULT_INIT_FILE_ENABLED 0
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_RAM_BLOCK_TYPE AUTO
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_READ_DURING_WRITE_MODE DONT_CARE
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_SINGLE_CLOCK_OP 1
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_SIZE_MULTIPLE 1
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_SIZE_VALUE 8192
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_WRITABLE 1
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_MEMORY_INFO_GENERATE_HEX 1
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_MEMORY_INFO_HAS_BYTE_LANE 0
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_ONCHIP_SRAM_MEMORY_INFO_MEM_INIT_FILENAME Computer_System_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM

/*
 * Macros for device 'SD_Card', class 'Altera_UP_SD_Card_Avalon_Interface'
 * The macros are prefixed with 'SD_CARD_'.
 * The prefix is the slave descriptor.
 */
#define SD_CARD_COMPONENT_TYPE Altera_UP_SD_Card_Avalon_Interface
#define SD_CARD_COMPONENT_NAME SD_Card
#define SD_CARD_BASE 0xb000000
#define SD_CARD_SPAN 1024
#define SD_CARD_END 0xb0003ff

/*
 * Macros for device 'Flash_flash_erase_control', class 'Altera_UP_Flash_Memory_IP_Core_Avalon_Interface'
 * The macros are prefixed with 'FLASH_FLASH_ERASE_CONTROL_'.
 * The prefix is the slave descriptor.
 */
#define FLASH_FLASH_ERASE_CONTROL_COMPONENT_TYPE Altera_UP_Flash_Memory_IP_Core_Avalon_Interface
#define FLASH_FLASH_ERASE_CONTROL_COMPONENT_NAME Flash
#define FLASH_FLASH_ERASE_CONTROL_BASE 0xbff0000
#define FLASH_FLASH_ERASE_CONTROL_SPAN 4
#define FLASH_FLASH_ERASE_CONTROL_END 0xbff0003

/*
 * Macros for device 'Flash_flash_data', class 'Altera_UP_Flash_Memory_IP_Core_Avalon_Interface'
 * The macros are prefixed with 'FLASH_FLASH_DATA_'.
 * The prefix is the slave descriptor.
 */
#define FLASH_FLASH_DATA_COMPONENT_TYPE Altera_UP_Flash_Memory_IP_Core_Avalon_Interface
#define FLASH_FLASH_DATA_COMPONENT_NAME Flash
#define FLASH_FLASH_DATA_BASE 0xc000000
#define FLASH_FLASH_DATA_SPAN 8388608
#define FLASH_FLASH_DATA_END 0xc7fffff

/*
 * Macros for device 'Red_LEDs', class 'altera_avalon_pio'
 * The macros are prefixed with 'RED_LEDS_'.
 * The prefix is the slave descriptor.
 */
#define RED_LEDS_COMPONENT_TYPE altera_avalon_pio
#define RED_LEDS_COMPONENT_NAME Red_LEDs
#define RED_LEDS_BASE 0xff200000
#define RED_LEDS_SPAN 16
#define RED_LEDS_END 0xff20000f
#define RED_LEDS_BIT_CLEARING_EDGE_REGISTER 0
#define RED_LEDS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RED_LEDS_CAPTURE 0
#define RED_LEDS_DATA_WIDTH 18
#define RED_LEDS_DO_TEST_BENCH_WIRING 0
#define RED_LEDS_DRIVEN_SIM_VALUE 0
#define RED_LEDS_EDGE_TYPE NONE
#define RED_LEDS_FREQ 50000000
#define RED_LEDS_HAS_IN 0
#define RED_LEDS_HAS_OUT 1
#define RED_LEDS_HAS_TRI 0
#define RED_LEDS_IRQ_TYPE NONE
#define RED_LEDS_RESET_VALUE 0

/*
 * Macros for device 'Green_LEDs', class 'altera_avalon_pio'
 * The macros are prefixed with 'GREEN_LEDS_'.
 * The prefix is the slave descriptor.
 */
#define GREEN_LEDS_COMPONENT_TYPE altera_avalon_pio
#define GREEN_LEDS_COMPONENT_NAME Green_LEDs
#define GREEN_LEDS_BASE 0xff200010
#define GREEN_LEDS_SPAN 16
#define GREEN_LEDS_END 0xff20001f
#define GREEN_LEDS_BIT_CLEARING_EDGE_REGISTER 0
#define GREEN_LEDS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define GREEN_LEDS_CAPTURE 0
#define GREEN_LEDS_DATA_WIDTH 9
#define GREEN_LEDS_DO_TEST_BENCH_WIRING 0
#define GREEN_LEDS_DRIVEN_SIM_VALUE 0
#define GREEN_LEDS_EDGE_TYPE NONE
#define GREEN_LEDS_FREQ 50000000
#define GREEN_LEDS_HAS_IN 0
#define GREEN_LEDS_HAS_OUT 1
#define GREEN_LEDS_HAS_TRI 0
#define GREEN_LEDS_IRQ_TYPE NONE
#define GREEN_LEDS_RESET_VALUE 0

/*
 * Macros for device 'HEX3_HEX0', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX3_HEX0_'.
 * The prefix is the slave descriptor.
 */
#define HEX3_HEX0_COMPONENT_TYPE altera_avalon_pio
#define HEX3_HEX0_COMPONENT_NAME HEX3_HEX0
#define HEX3_HEX0_BASE 0xff200020
#define HEX3_HEX0_SPAN 16
#define HEX3_HEX0_END 0xff20002f
#define HEX3_HEX0_BIT_CLEARING_EDGE_REGISTER 0
#define HEX3_HEX0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX3_HEX0_CAPTURE 0
#define HEX3_HEX0_DATA_WIDTH 32
#define HEX3_HEX0_DO_TEST_BENCH_WIRING 0
#define HEX3_HEX0_DRIVEN_SIM_VALUE 0
#define HEX3_HEX0_EDGE_TYPE NONE
#define HEX3_HEX0_FREQ 50000000
#define HEX3_HEX0_HAS_IN 0
#define HEX3_HEX0_HAS_OUT 1
#define HEX3_HEX0_HAS_TRI 0
#define HEX3_HEX0_IRQ_TYPE NONE
#define HEX3_HEX0_RESET_VALUE 0

/*
 * Macros for device 'HEX7_HEX4', class 'altera_avalon_pio'
 * The macros are prefixed with 'HEX7_HEX4_'.
 * The prefix is the slave descriptor.
 */
#define HEX7_HEX4_COMPONENT_TYPE altera_avalon_pio
#define HEX7_HEX4_COMPONENT_NAME HEX7_HEX4
#define HEX7_HEX4_BASE 0xff200030
#define HEX7_HEX4_SPAN 16
#define HEX7_HEX4_END 0xff20003f
#define HEX7_HEX4_BIT_CLEARING_EDGE_REGISTER 0
#define HEX7_HEX4_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HEX7_HEX4_CAPTURE 0
#define HEX7_HEX4_DATA_WIDTH 32
#define HEX7_HEX4_DO_TEST_BENCH_WIRING 0
#define HEX7_HEX4_DRIVEN_SIM_VALUE 0
#define HEX7_HEX4_EDGE_TYPE NONE
#define HEX7_HEX4_FREQ 50000000
#define HEX7_HEX4_HAS_IN 0
#define HEX7_HEX4_HAS_OUT 1
#define HEX7_HEX4_HAS_TRI 0
#define HEX7_HEX4_IRQ_TYPE NONE
#define HEX7_HEX4_RESET_VALUE 0

/*
 * Macros for device 'Slider_Switches', class 'altera_avalon_pio'
 * The macros are prefixed with 'SLIDER_SWITCHES_'.
 * The prefix is the slave descriptor.
 */
#define SLIDER_SWITCHES_COMPONENT_TYPE altera_avalon_pio
#define SLIDER_SWITCHES_COMPONENT_NAME Slider_Switches
#define SLIDER_SWITCHES_BASE 0xff200040
#define SLIDER_SWITCHES_SPAN 16
#define SLIDER_SWITCHES_END 0xff20004f
#define SLIDER_SWITCHES_BIT_CLEARING_EDGE_REGISTER 0
#define SLIDER_SWITCHES_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SLIDER_SWITCHES_CAPTURE 0
#define SLIDER_SWITCHES_DATA_WIDTH 18
#define SLIDER_SWITCHES_DO_TEST_BENCH_WIRING 1
#define SLIDER_SWITCHES_DRIVEN_SIM_VALUE 0
#define SLIDER_SWITCHES_EDGE_TYPE NONE
#define SLIDER_SWITCHES_FREQ 50000000
#define SLIDER_SWITCHES_HAS_IN 1
#define SLIDER_SWITCHES_HAS_OUT 0
#define SLIDER_SWITCHES_HAS_TRI 0
#define SLIDER_SWITCHES_IRQ_TYPE NONE
#define SLIDER_SWITCHES_RESET_VALUE 0

/*
 * Macros for device 'Pushbuttons', class 'altera_avalon_pio'
 * The macros are prefixed with 'PUSHBUTTONS_'.
 * The prefix is the slave descriptor.
 */
#define PUSHBUTTONS_COMPONENT_TYPE altera_avalon_pio
#define PUSHBUTTONS_COMPONENT_NAME Pushbuttons
#define PUSHBUTTONS_BASE 0xff200050
#define PUSHBUTTONS_SPAN 16
#define PUSHBUTTONS_END 0xff20005f
#define PUSHBUTTONS_IRQ 1
#define PUSHBUTTONS_BIT_CLEARING_EDGE_REGISTER 1
#define PUSHBUTTONS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PUSHBUTTONS_CAPTURE 1
#define PUSHBUTTONS_DATA_WIDTH 4
#define PUSHBUTTONS_DO_TEST_BENCH_WIRING 1
#define PUSHBUTTONS_DRIVEN_SIM_VALUE 0
#define PUSHBUTTONS_EDGE_TYPE FALLING
#define PUSHBUTTONS_FREQ 50000000
#define PUSHBUTTONS_HAS_IN 1
#define PUSHBUTTONS_HAS_OUT 0
#define PUSHBUTTONS_HAS_TRI 0
#define PUSHBUTTONS_IRQ_TYPE EDGE
#define PUSHBUTTONS_RESET_VALUE 0

/*
 * Macros for device 'Expansion_JP5', class 'altera_avalon_pio'
 * The macros are prefixed with 'EXPANSION_JP5_'.
 * The prefix is the slave descriptor.
 */
#define EXPANSION_JP5_COMPONENT_TYPE altera_avalon_pio
#define EXPANSION_JP5_COMPONENT_NAME Expansion_JP5
#define EXPANSION_JP5_BASE 0xff200060
#define EXPANSION_JP5_SPAN 16
#define EXPANSION_JP5_END 0xff20006f
#define EXPANSION_JP5_IRQ 11
#define EXPANSION_JP5_BIT_CLEARING_EDGE_REGISTER 1
#define EXPANSION_JP5_BIT_MODIFYING_OUTPUT_REGISTER 0
#define EXPANSION_JP5_CAPTURE 1
#define EXPANSION_JP5_DATA_WIDTH 32
#define EXPANSION_JP5_DO_TEST_BENCH_WIRING 1
#define EXPANSION_JP5_DRIVEN_SIM_VALUE 0
#define EXPANSION_JP5_EDGE_TYPE FALLING
#define EXPANSION_JP5_FREQ 50000000
#define EXPANSION_JP5_HAS_IN 0
#define EXPANSION_JP5_HAS_OUT 0
#define EXPANSION_JP5_HAS_TRI 1
#define EXPANSION_JP5_IRQ_TYPE EDGE
#define EXPANSION_JP5_RESET_VALUE 0

/*
 * Macros for device 'PS2_Port', class 'altera_up_avalon_ps2'
 * The macros are prefixed with 'PS2_PORT_'.
 * The prefix is the slave descriptor.
 */
#define PS2_PORT_COMPONENT_TYPE altera_up_avalon_ps2
#define PS2_PORT_COMPONENT_NAME PS2_Port
#define PS2_PORT_BASE 0xff200100
#define PS2_PORT_SPAN 8
#define PS2_PORT_END 0xff200107
#define PS2_PORT_IRQ 7

/*
 * Macros for device 'PS2_Port_Dual', class 'altera_up_avalon_ps2'
 * The macros are prefixed with 'PS2_PORT_DUAL_'.
 * The prefix is the slave descriptor.
 */
#define PS2_PORT_DUAL_COMPONENT_TYPE altera_up_avalon_ps2
#define PS2_PORT_DUAL_COMPONENT_NAME PS2_Port_Dual
#define PS2_PORT_DUAL_BASE 0xff200108
#define PS2_PORT_DUAL_SPAN 8
#define PS2_PORT_DUAL_END 0xff20010f
#define PS2_PORT_DUAL_IRQ 23

/*
 * Macros for device 'USB', class 'altera_up_avalon_usb'
 * The macros are prefixed with 'USB_'.
 * The prefix is the slave descriptor.
 */
#define USB_COMPONENT_TYPE altera_up_avalon_usb
#define USB_COMPONENT_NAME USB
#define USB_BASE 0xff200110
#define USB_SPAN 16
#define USB_END 0xff20011f
#define USB_IRQ 17

/*
 * Macros for device 'JTAG_UART', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME JTAG_UART
#define JTAG_UART_BASE 0xff201000
#define JTAG_UART_SPAN 8
#define JTAG_UART_END 0xff201007
#define JTAG_UART_IRQ 8
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'Serial_Port', class 'altera_up_avalon_rs232'
 * The macros are prefixed with 'SERIAL_PORT_'.
 * The prefix is the slave descriptor.
 */
#define SERIAL_PORT_COMPONENT_TYPE altera_up_avalon_rs232
#define SERIAL_PORT_COMPONENT_NAME Serial_Port
#define SERIAL_PORT_BASE 0xff201010
#define SERIAL_PORT_SPAN 8
#define SERIAL_PORT_END 0xff201017
#define SERIAL_PORT_IRQ 10

/*
 * Macros for device 'IrDA', class 'altera_up_avalon_irda'
 * The macros are prefixed with 'IRDA_'.
 * The prefix is the slave descriptor.
 */
#define IRDA_COMPONENT_TYPE altera_up_avalon_irda
#define IRDA_COMPONENT_NAME IrDA
#define IRDA_BASE 0xff201020
#define IRDA_SPAN 8
#define IRDA_END 0xff201027
#define IRDA_IRQ 9

/*
 * Macros for device 'Interval_Timer', class 'altera_avalon_timer'
 * The macros are prefixed with 'INTERVAL_TIMER_'.
 * The prefix is the slave descriptor.
 */
#define INTERVAL_TIMER_COMPONENT_TYPE altera_avalon_timer
#define INTERVAL_TIMER_COMPONENT_NAME Interval_Timer
#define INTERVAL_TIMER_BASE 0xff202000
#define INTERVAL_TIMER_SPAN 32
#define INTERVAL_TIMER_END 0xff20201f
#define INTERVAL_TIMER_IRQ 0
#define INTERVAL_TIMER_ALWAYS_RUN 0
#define INTERVAL_TIMER_COUNTER_SIZE 32
#define INTERVAL_TIMER_FIXED_PERIOD 0
#define INTERVAL_TIMER_FREQ 50000000
#define INTERVAL_TIMER_LOAD_VALUE 6249999
#define INTERVAL_TIMER_MULT 0.001
#define INTERVAL_TIMER_PERIOD 125.0
#define INTERVAL_TIMER_PERIOD_UNITS ms
#define INTERVAL_TIMER_RESET_OUTPUT 0
#define INTERVAL_TIMER_SNAPSHOT 1
#define INTERVAL_TIMER_TICKS_PER_SEC 8
#define INTERVAL_TIMER_TIMEOUT_PULSE_OUTPUT 0

/*
 * Macros for device 'Interval_Timer_2', class 'altera_avalon_timer'
 * The macros are prefixed with 'INTERVAL_TIMER_2_'.
 * The prefix is the slave descriptor.
 */
#define INTERVAL_TIMER_2_COMPONENT_TYPE altera_avalon_timer
#define INTERVAL_TIMER_2_COMPONENT_NAME Interval_Timer_2
#define INTERVAL_TIMER_2_BASE 0xff202020
#define INTERVAL_TIMER_2_SPAN 32
#define INTERVAL_TIMER_2_END 0xff20203f
#define INTERVAL_TIMER_2_IRQ 2
#define INTERVAL_TIMER_2_ALWAYS_RUN 0
#define INTERVAL_TIMER_2_COUNTER_SIZE 32
#define INTERVAL_TIMER_2_FIXED_PERIOD 0
#define INTERVAL_TIMER_2_FREQ 50000000
#define INTERVAL_TIMER_2_LOAD_VALUE 6249999
#define INTERVAL_TIMER_2_MULT 0.001
#define INTERVAL_TIMER_2_PERIOD 125.0
#define INTERVAL_TIMER_2_PERIOD_UNITS ms
#define INTERVAL_TIMER_2_RESET_OUTPUT 0
#define INTERVAL_TIMER_2_SNAPSHOT 1
#define INTERVAL_TIMER_2_TICKS_PER_SEC 8
#define INTERVAL_TIMER_2_TIMEOUT_PULSE_OUTPUT 0

/*
 * Macros for device 'SysID', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_COMPONENT_NAME SysID
#define SYSID_BASE 0xff202040
#define SYSID_SPAN 8
#define SYSID_END 0xff202047
#define SYSID_ID 0
#define SYSID_TIMESTAMP 1636956790

/*
 * Macros for device 'AV_Config', class 'altera_up_avalon_audio_and_video_config'
 * The macros are prefixed with 'AV_CONFIG_'.
 * The prefix is the slave descriptor.
 */
#define AV_CONFIG_COMPONENT_TYPE altera_up_avalon_audio_and_video_config
#define AV_CONFIG_COMPONENT_NAME AV_Config
#define AV_CONFIG_BASE 0xff203000
#define AV_CONFIG_SPAN 16
#define AV_CONFIG_END 0xff20300f

/*
 * Macros for device 'VGA_Subsystem_VGA_Pixel_DMA', class 'altera_up_avalon_video_dma_controller'
 * The macros are prefixed with 'VGA_SUBSYSTEM_VGA_PIXEL_DMA_'.
 * The prefix is the slave descriptor.
 */
#define VGA_SUBSYSTEM_VGA_PIXEL_DMA_COMPONENT_TYPE altera_up_avalon_video_dma_controller
#define VGA_SUBSYSTEM_VGA_PIXEL_DMA_COMPONENT_NAME VGA_Subsystem_VGA_Pixel_DMA
#define VGA_SUBSYSTEM_VGA_PIXEL_DMA_BASE 0xff203020
#define VGA_SUBSYSTEM_VGA_PIXEL_DMA_SPAN 16
#define VGA_SUBSYSTEM_VGA_PIXEL_DMA_END 0xff20302f

/*
 * Macros for device 'VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA', class 'altera_up_avalon_video_dma_controller'
 * The macros are prefixed with 'VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA_'.
 * The prefix is the slave descriptor.
 */
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA_COMPONENT_TYPE altera_up_avalon_video_dma_controller
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA_COMPONENT_NAME VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA_BASE 0xff203030
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA_SPAN 16
#define VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA_END 0xff20303f

/*
 * Macros for device 'Audio_Subsystem_Audio', class 'altera_up_avalon_audio'
 * The macros are prefixed with 'AUDIO_SUBSYSTEM_AUDIO_'.
 * The prefix is the slave descriptor.
 */
#define AUDIO_SUBSYSTEM_AUDIO_COMPONENT_TYPE altera_up_avalon_audio
#define AUDIO_SUBSYSTEM_AUDIO_COMPONENT_NAME Audio_Subsystem_Audio
#define AUDIO_SUBSYSTEM_AUDIO_BASE 0xff203040
#define AUDIO_SUBSYSTEM_AUDIO_SPAN 16
#define AUDIO_SUBSYSTEM_AUDIO_END 0xff20304f
#define AUDIO_SUBSYSTEM_AUDIO_IRQ 6

/*
 * Macros for device 'Char_LCD_16x2', class 'altera_up_avalon_character_lcd'
 * The macros are prefixed with 'CHAR_LCD_16X2_'.
 * The prefix is the slave descriptor.
 */
#define CHAR_LCD_16X2_COMPONENT_TYPE altera_up_avalon_character_lcd
#define CHAR_LCD_16X2_COMPONENT_NAME Char_LCD_16x2
#define CHAR_LCD_16X2_BASE 0xff203050
#define CHAR_LCD_16X2_SPAN 2
#define CHAR_LCD_16X2_END 0xff203051

/*
 * Macros for device 'Video_In_Subsystem_Video_In_DMA', class 'altera_up_avalon_video_dma_controller'
 * The macros are prefixed with 'VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA_'.
 * The prefix is the slave descriptor.
 */
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA_COMPONENT_TYPE altera_up_avalon_video_dma_controller
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA_COMPONENT_NAME Video_In_Subsystem_Video_In_DMA
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA_BASE 0xff203060
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA_SPAN 16
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA_END 0xff20306f

/*
 * Macros for device 'Video_In_Subsystem_Video_In_Edge_Detection_Subsystem_Edge_Detection_Router_Controller', class 'altera_avalon_pio'
 * The macros are prefixed with 'VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_'.
 * The prefix is the slave descriptor.
 */
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_COMPONENT_TYPE altera_avalon_pio
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_COMPONENT_NAME Video_In_Subsystem_Video_In_Edge_Detection_Subsystem_Edge_Detection_Router_Controller
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_BASE 0xff203070
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_SPAN 16
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_END 0xff20307f
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_BIT_CLEARING_EDGE_REGISTER 0
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_BIT_MODIFYING_OUTPUT_REGISTER 0
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_CAPTURE 0
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_DATA_WIDTH 1
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_DO_TEST_BENCH_WIRING 0
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_DRIVEN_SIM_VALUE 0
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_EDGE_TYPE NONE
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_FREQ 50000000
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_HAS_IN 0
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_HAS_OUT 1
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_HAS_TRI 0
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_IRQ_TYPE NONE
#define VIDEO_IN_SUBSYSTEM_VIDEO_IN_EDGE_DETECTION_SUBSYSTEM_EDGE_DETECTION_ROUTER_CONTROLLER_RESET_VALUE 0


#endif /* _ALTERA_NIOS2_H_ */
